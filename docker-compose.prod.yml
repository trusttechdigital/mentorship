services:
  postgres:
    image: postgres:15-alpine
    container_name: mentorship-postgres-prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--auth-local=trust --auth-host=scram-sha-256"
    volumes:
      # CRITICAL: Use absolute paths in production
      - /var/lib/mentorship/postgres:/var/lib/postgresql/data
      - /var/lib/mentorship/backups:/backups
    networks:
      - mentorship-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    # Resource limits for production
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  backend:
    # ... other config
    restart: unless-stopped
    volumes:
      # CRITICAL: Use absolute paths in production
      - /var/lib/mentorship/uploads:/app/uploads
      - /var/lib/mentorship/logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

networks:
  mentorship-network:
    driver: bridge