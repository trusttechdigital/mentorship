# docker-compose.dev.yml - Government-Ready Development Environment
# Ministry of Social Development - Mentorship Portal

services:
  postgres:
    image: postgres:15-alpine
    container_name: mentorship-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: mentorship_portal_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      # Government security settings
      POSTGRES_INITDB_ARGS: "--auth-local=trust --auth-host=scram-sha-256"
      # Enable logging for audit purposes
      POSTGRES_LOG_STATEMENT: "all"
      POSTGRES_LOG_CONNECTIONS: "on"
      POSTGRES_LOG_DISCONNECTIONS: "on"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      # Mount backup directory for development testing
      - ./backups:/backups
    ports:
      - "5432:5432"
    networks:
      - mentorship-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d mentorship_portal_dev"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    # Resource limits (practice for production)
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  redis:
    image: redis:7-alpine
    container_name: mentorship-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - mentorship-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    # Persistent Redis for session management
    command: redis-server --appendonly yes --requirepass devpassword123
    volumes:
      - redis_dev_data:/data

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: mentorship-backend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: mentorship_portal_dev
      DB_USER: postgres
      DB_PASSWORD: password
      JWT_SECRET: dev-secret-key-change-in-production-for-ministry
      REDIS_URL: redis://:devpassword123@redis:6379
      # Government audit settings
      AUDIT_LEVEL: "ALL"
      RETENTION_PERIOD: "7_YEARS"
      COMPLIANCE_MODE: "GOVERNMENT"
      # File upload settings
      MAX_FILE_SIZE: 10485760
      ALLOWED_FILE_TYPES: "pdf,doc,docx,xls,xlsx,jpg,jpeg,png"
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
      - ./backups:/app/backups
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - mentorship-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: mentorship-frontend-dev
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:3001/api
      REACT_APP_APP_NAME: "Ministry of Social Development - Mentorship Portal"
      REACT_APP_VERSION: "1.0.0-dev"
      # Government branding
      REACT_APP_MINISTRY: "Ministry of Grenada"
      REACT_APP_DEPARTMENT: "Youth Development"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - mentorship-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  backend_node_modules:
  frontend_node_modules:

networks:
  mentorship-network:
    driver: bridge